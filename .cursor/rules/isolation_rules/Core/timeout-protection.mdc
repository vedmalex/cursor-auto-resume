---
description: "Always apply this rule to implement timeout protection system for preventing command and test hanging. Ensures all CLI commands, tests, and server operations have appropriate timeout limits across all Memory Bank modes."
globs: "**/**"
alwaysApply: true
---

# TIMEOUT PROTECTION SYSTEM

> **TL;DR:** Timeout protection system ensures mandatory timeout usage for all commands and tests, preventing system hanging and ensuring reliable operation execution across all Memory Bank operations.

## ‚è±Ô∏è –ü–†–ò–ù–¶–ò–ü–´ TIMEOUT –ó–ê–©–ò–¢–´

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π timeout**
- –í—Å–µ CLI –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å timeout –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
- –¢–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è –≤ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è
- –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å startup timeout
- –î–ª–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã

**–ì—Ä–∞–¥–∞—Ü–∏—è timeout –∑–Ω–∞—á–µ–Ω–∏–π**
- –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã: 30 —Å–µ–∫—É–Ω–¥
- –°—Ä–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: 2-5 –º–∏–Ω—É—Ç
- –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤: 10-15 –º–∏–Ω—É—Ç
- –¢–µ—Å—Ç—ã: 5-30 –º–∏–Ω—É—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)
- –°–µ—Ä–≤–µ—Ä—ã: 60 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–ø—É—Å–∫

## üõ°Ô∏è TIMEOUT –°–¢–†–ê–¢–ï–ì–ò–ò

### –ö–æ–º–∞–Ω–¥—ã —Å timeout
```bash
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ timeout –¥–ª—è –∫–æ–º–∞–Ω–¥
safe_command_execution() {
  local command="$1"
  local timeout_duration="$2"
  local description="$3"

  echo "‚è±Ô∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å timeout $timeout_duration: $description"

  if timeout "$timeout_duration" bash -c "$command"; then
    echo "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    return 0
  else
    local exit_code=$?
    if [ $exit_code -eq 124 ]; then
      echo "‚è∞ TIMEOUT: –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ $timeout_duration"
      echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£–≤–µ–ª–∏—á—å—Ç–µ timeout –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É"
    else
      echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $exit_code)"
    fi
    return $exit_code
  fi
}
```

### –¢–µ—Å—Ç—ã —Å timeout
```bash
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º timeout
run_tests_with_timeout() {
  local test_command="$1"
  local test_timeout="${2:-300}"  # 5 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

  echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å timeout $test_timeout —Å–µ–∫—É–Ω–¥"

  # –î–ª—è npm/yarn —Ç–µ—Å—Ç–æ–≤
  if echo "$test_command" | grep -q "npm\|yarn\|bun"; then
    timeout "$test_timeout" $test_command
  # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
  else
    timeout "$test_timeout" bash -c "$test_command"
  fi

  local result=$?
  case $result in
    0)
      echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
      ;;
    124)
      echo "‚è∞ TIMEOUT: –¢–µ—Å—Ç—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏"
      echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
      echo "   - –ú–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Ç—Ä–µ–±—É—é—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
      echo "   - –ó–∞–≤–∏—Å—à–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏–ª–∏ —Ä–µ—Å—É—Ä—Å—ã"
      echo "   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π timeout –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"
      ;;
    *)
      echo "‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $result)"
      ;;
  esac

  return $result
}
```

### –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å timeout
```bash
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å timeout –Ω–∞ —Å—Ç–∞—Ä—Ç
start_server_with_timeout() {
  local server_command="$1"
  local startup_timeout="${2:-60}"  # 60 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–ø—É—Å–∫
  local health_check_url="${3:-http://localhost:3000}"

  echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å timeout $startup_timeout —Å–µ–∫—É–Ω–¥"

  # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ
  $server_command &
  local server_pid=$!

  echo "üìã PID —Å–µ—Ä–≤–µ—Ä–∞: $server_pid"

  # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ —Å timeout
  local elapsed=0
  local check_interval=2

  while [ $elapsed -lt $startup_timeout ]; do
    if curl -s "$health_check_url" >/dev/null 2>&1; then
      echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
      echo "üåê URL: $health_check_url"
      echo "üîß PID: $server_pid"
      return 0
    fi

    sleep $check_interval
    elapsed=$((elapsed + check_interval))
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞... ($elapsed/$startup_timeout —Å–µ–∫)"
  done

  echo "‚è∞ TIMEOUT: –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ $startup_timeout —Å–µ–∫—É–Ω–¥"
  echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ (PID: $server_pid)"
  kill $server_pid 2>/dev/null
  return 124
}
```

## üìã TIMEOUT –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò

### –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ timeout –∑–Ω–∞—á–µ–Ω–∏—è
```bash
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è timeout –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
declare -A TIMEOUT_CONFIG=(
  # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã
  ["git_status"]="10"
  ["file_operations"]="30"
  ["npm_install_single"]="120"

  # –°—Ä–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  ["npm_install_full"]="300"
  ["build_small"]="300"
  ["test_unit"]="180"

  # –î–ª–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  ["build_large"]="900"
  ["test_integration"]="600"
  ["test_e2e"]="1800"

  # –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  ["server_startup"]="60"
  ["server_health_check"]="30"
  ["database_migration"]="300"
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ timeout –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏
get_timeout_for_operation() {
  local operation="$1"
  local default_timeout="${2:-120}"

  echo "${TIMEOUT_CONFIG[$operation]:-$default_timeout}"
}
```

### –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ timeout
```bash
# –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π timeout –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
calculate_adaptive_timeout() {
  local operation_type="$1"
  local project_size="$2"  # small, medium, large

  local base_timeout
  case "$operation_type" in
    "build")
      case "$project_size" in
        "small") base_timeout=180 ;;
        "medium") base_timeout=300 ;;
        "large") base_timeout=600 ;;
      esac
      ;;
    "test")
      case "$project_size" in
        "small") base_timeout=120 ;;
        "medium") base_timeout=300 ;;
        "large") base_timeout=900 ;;
      esac
      ;;
    *)
      base_timeout=120
      ;;
  esac

  echo "$base_timeout"
}
```

## üîÑ –û–ë–†–ê–ë–û–¢–ö–ê TIMEOUT –°–ò–¢–£–ê–¶–ò–ô

### –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
```bash
# –û–±—Ä–∞–±–æ—Ç–∫–∞ timeout —Å –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
handle_timeout_with_retry() {
  local command="$1"
  local timeout_duration="$2"
  local max_retries="${3:-3}"
  local retry_delay="${4:-5}"

  local attempt=1

  while [ $attempt -le $max_retries ]; do
    echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $max_retries"

    if timeout "$timeout_duration" bash -c "$command"; then
      echo "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $attempt"
      return 0
    fi

    local exit_code=$?
    if [ $exit_code -eq 124 ]; then
      echo "‚è∞ TIMEOUT –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $attempt"
      if [ $attempt -lt $max_retries ]; then
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ $retry_delay —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º..."
        sleep $retry_delay
      fi
    else
      echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $exit_code)"
      return $exit_code
    fi

    attempt=$((attempt + 1))
  done

  echo "üö´ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."
  return 124
}
```

### Cleanup –ø—Ä–∏ timeout
```bash
# –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ timeout
cleanup_on_timeout() {
  local process_name="$1"
  local cleanup_commands="$2"

  echo "üßπ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ cleanup –ø–æ—Å–ª–µ timeout –¥–ª—è: $process_name"

  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
  pkill -f "$process_name" 2>/dev/null || true

  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –æ—á–∏—Å—Ç–∫–∏
  if [ -n "$cleanup_commands" ]; then
    echo "üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –æ—á–∏—Å—Ç–∫–∏"
    eval "$cleanup_commands"
  fi

  # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  find /tmp -name "*${process_name}*" -mtime -1 -delete 2>/dev/null || true

  echo "‚úÖ Cleanup –∑–∞–≤–µ—Ä—à–µ–Ω"
}
```

## üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì TIMEOUT

### –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ timeout
```bash
# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ timeout
track_timeout_stats() {
  local operation="$1"
  local duration="$2"
  local status="$3"  # success, timeout, error

  local stats_file="/tmp/timeout_stats.log"
  local timestamp=$(date +"%Y-%m-%d %H:%M:%S")

  echo "$timestamp,$operation,$duration,$status" >> "$stats_file"

  # –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 –æ–ø–µ—Ä–∞—Ü–∏–π
  if [ "$(wc -l < "$stats_file")" -gt 100 ]; then
    tail -100 "$stats_file" > "${stats_file}.tmp"
    mv "${stats_file}.tmp" "$stats_file"
  fi
}

# –ê–Ω–∞–ª–∏–∑ timeout —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
analyze_timeout_stats() {
  local stats_file="/tmp/timeout_stats.log"

  if [ ! -f "$stats_file" ]; then
    echo "üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ timeout —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ"
    return
  fi

  echo "üìä –ê–ù–ê–õ–ò–ó TIMEOUT –°–¢–ê–¢–ò–°–¢–ò–ö–ò:"
  echo "============================="

  local total_ops=$(wc -l < "$stats_file")
  local timeout_ops=$(grep ",timeout$" "$stats_file" | wc -l)
  local success_ops=$(grep ",success$" "$stats_file" | wc -l)

  echo "üìà –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: $total_ops"
  echo "‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: $success_ops ($(( success_ops * 100 / total_ops ))%)"
  echo "‚è∞ Timeout: $timeout_ops ($(( timeout_ops * 100 / total_ops ))%)"

  if [ $timeout_ops -gt 0 ]; then
    echo "üîç –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∞—Å—Ç—ã–º–∏ timeout:"
    cut -d',' -f2 "$stats_file" | grep -E "$(grep ",timeout$" "$stats_file" | cut -d',' -f2)" | sort | uniq -c | sort -nr | head -5
  fi
}
```

## üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û TIMEOUT

### –í—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ timeout
```bash
# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ timeout –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π
recommend_timeout() {
  local operation_type="$1"
  local context="$2"

  echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û TIMEOUT –¥–ª—è $operation_type:"
  echo "=============================================="

  case "$operation_type" in
    "npm_install")
      echo "üì¶ npm install:"
      echo "   - –û–¥–∏–Ω–æ—á–Ω—ã–π –ø–∞–∫–µ—Ç: 60-120 —Å–µ–∫"
      echo "   - –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞: 300-600 —Å–µ–∫"
      echo "   - –° –Ω–∞—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏: 600-900 —Å–µ–∫"
      ;;
    "build")
      echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
      echo "   - –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç: 120-300 —Å–µ–∫"
      echo "   - –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–µ–∫—Ç: 300-600 —Å–µ–∫"
      echo "   - –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ–µ–∫—Ç: 600-1200 —Å–µ–∫"
      ;;
    "test")
      echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
      echo "   - Unit —Ç–µ—Å—Ç—ã: 60-300 —Å–µ–∫"
      echo "   - Integration —Ç–µ—Å—Ç—ã: 300-900 —Å–µ–∫"
      echo "   - E2E —Ç–µ—Å—Ç—ã: 900-1800 —Å–µ–∫"
      ;;
    *)
      echo "‚öôÔ∏è –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
      echo "   - –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã: 30-60 —Å–µ–∫"
      echo "   - –°—Ä–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: 120-300 —Å–µ–∫"
      echo "   - –î–ª–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: 600+ —Å–µ–∫"
      ;;
  esac

  echo ""
  echo "üîß –§–∞–∫—Ç–æ—Ä—ã –¥–ª—è —É—á–µ—Ç–∞:"
  echo "   - –†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
  echo "   - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã"
  echo "   - –°–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (–¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫)"
  echo "   - –°–ª–æ–∂–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π"
}
```

## üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –°–ò–¢–£–ê–¶–ò–ò

### –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–∏ timeout
```bash
# –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö timeout
emergency_timeout_response() {
  local operation="$1"
  local severity="$2"  # low, medium, high, critical

  echo "üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø: Timeout –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏ $operation"
  echo "üéØ –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏: $severity"

  case "$severity" in
    "critical")
      echo "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô TIMEOUT - –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
      echo "   1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
      echo "   2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
      echo "   3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
      echo "   4. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º"

      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
      pkill -f "$operation" 2>/dev/null || true

      # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
      ps aux > "/tmp/emergency_ps_$(date +%Y%m%d_%H%M%S).log"
      ;;
    "high")
      echo "üü† –í–´–°–û–ö–ò–ô TIMEOUT - –î–µ–π—Å—Ç–≤–∏—è –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é:"
      echo "   1. –ê–Ω–∞–ª–∏–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤"
      echo "   2. –ü–æ–ø—ã—Ç–∫–∞ –º—è–≥–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
      echo "   3. –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞"
      ;;
    *)
      echo "üü° –°–¢–ê–ù–î–ê–†–¢–ù–´–ô TIMEOUT - –û–±—ã—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
      echo "   1. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è"
      echo "   2. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º timeout"
      echo "   3. –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω"
      ;;
  esac
}
```

–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ timeout –∑–∞—â–∏—Ç—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤ Memory Bank —Å–∏—Å—Ç–µ–º–µ, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—è –∑–∞–≤–∏—Å–∞–Ω–∏—è –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.