---
description: "Always apply this rule at the beginning of VAN cycle to validate Git branch setup and ensure work starts in isolated feature branch. Checks current branch, working directory cleanliness, and automatically suggests creating task-specific branches."
globs: "**/van-mode-map.mdc"
alwaysApply: true
---
# GIT SETUP VALIDATION & BRANCH MANAGEMENT

> **TL;DR:** –≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ª—é–±–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π feature-–≤–µ—Ç–∫–µ. –û–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É, —á–∏—Å—Ç–æ—Ç—É —Ä–∞–±–æ—á–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É, –Ω–∞–∑–≤–∞–Ω–Ω—É—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–µ–π. **–≠—Ç–æ—Ç —à–∞–≥ —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.**

## üîß GIT WORKFLOW CONTROLLER INTEGRATION

This rule MUST use the centralized Git Workflow Controller for all git operations:

```bash
# Load Git Workflow Controller before any git operations
fetch_rules(["./cursor/rules/isolation_rules/Core/git-workflow-controller.mdc"])
git_controller_init

# Use controller functions instead of direct git commands
```

**Key Benefits:**
- User approval in MANUAL mode for branch creation
- Comprehensive logging of git setup operations
- Consistent error handling across setup process

## üå≥ –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ç–∫–∏

```mermaid
graph TD
    Start["‚ñ∂Ô∏è Start Git Validation"] --> CheckBranch{"–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞<br>'main' –∏–ª–∏ 'master'?"}

    CheckBranch -->|"–ù–µ—Ç"| CheckStatusNonMain["–ü—Ä–æ–≤–µ—Ä–∏—Ç—å<br>—Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π"]
    CheckBranch -->|"–î–∞"| CheckStatusMain["–ü—Ä–æ–≤–µ—Ä–∏—Ç—å<br>—Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π"]

    CheckStatusMain -->|Clean| SuggestBranch["‚úÖ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å<br>—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏"]
    CheckStatusMain -->|Dirty| BlockDirtyMain["üî¥ –ë–õ–û–ö: –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ<br>–∏–ª–∏ —Å–ø—Ä—è—á—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è<br>–≤ 'main'/'master'"]

    CheckStatusNonMain -->|Clean| ContinueOnBranch["‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å<br>–≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–µ"]
    CheckStatusNonMain -->|Dirty| WarnDirtyBranch["‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï:<br>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å<br>–∏–∑–º–µ–Ω–µ–Ω–∏—è"]

    SuggestBranch --> UserConfirm{"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å<br>—Å–æ–≥–ª–∞—Å–µ–Ω?"}
    UserConfirm -->|"–î–∞"| CreateAndSwitch["–°–æ–∑–¥–∞—Ç—å –∏<br>–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è<br>–Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É"]
    UserConfirm -->|"–ù–µ—Ç"| BlockNoBranch["üî¥ –ë–õ–û–ö: –ù–µ–ª—å–∑—è<br>—Ä–∞–±–æ—Ç–∞—Ç—å –≤ 'main'/'master'"]

    WarnDirtyBranch --> ContinueOnBranch
    CreateAndSwitch --> FinalVerification["–ü—Ä–æ–≤–µ—Ä–∏—Ç—å<br>—É—Å–ø–µ—à–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ"]
    FinalVerification --> Proceed["‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ"]
    ContinueOnBranch --> Proceed

    style BlockDirtyMain fill:#ff5555,stroke:#cc0000,color:white
    style BlockNoBranch fill:#ff5555,stroke:#cc0000,color:white
    style Proceed fill:#5fd94d,stroke:#3da336,color:white
```

## üõ†Ô∏è –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫–æ–º–∞–Ω–¥—ã

### 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è

```bash
# 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–∏—Å—Ç–æ—Ç—É —Ä–∞–±–æ—á–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É—è controller
git_status=$(git_status_check)
if [[ -n "$git_status" ]]; then
  echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è."
  echo "$git_status"
  # –ù–∞ –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–∏—Ö —ç—Ç–∞–ø–∞—Ö –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ git_stash
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É –∏—Å–ø–æ–ª—å–∑—É—è controller
current_branch=$(git_current_branch)
echo "‚ÑπÔ∏è –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $current_branch"

if [[ "$current_branch" == "main" || "$current_branch" == "master" ]]; then
  if [[ -n "$git_status" ]]; then
    echo "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–µ—Ç–∫–µ '$current_branch'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –∫–æ–º–º–∏—Ç –∏–ª–∏ —Å–ø—Ä—è—á—å—Ç–µ (stash) –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
    # –ó–¥–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
    exit 1 # –ü—Ä–∏–º–µ—Ä –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  fi
  # –ï—Å–ª–∏ –≤–µ—Ç–∫–∞ 'main'/'master' –∏ –æ–Ω–∞ —á–∏—Å—Ç–∞—è, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏
  propose_new_branch
else
  echo "‚úÖ –†–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤–µ—Ç–∫–µ: '$current_branch'."
  # –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
fi
```

### 2. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏

```bash
# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —á–∏—Å—Ç–æ–π 'main' –∏–ª–∏ 'master'
propose_new_branch() {
  # –ò–∑–≤–ª–µ—á—å ID –∑–∞–¥–∞—á–∏ –∏–∑ tasks.md –∏–ª–∏ activeContext.md
  # –ü—Ä–∏–º–µ—Ä:
  task_id=$(grep -o 'TASK-[A-Z-]*-[0-9-]*' memory-bank/tasks.md | head -1 || echo "new-feature")
  task_desc=$(echo "$task_id" | tr '[:upper:]' '[:lower:]' | sed 's/task-//')

  proposed_branch="feature/$(date +%Y%m%d)-${task_desc}"

  echo "üí° –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï: –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏."
  echo "   –ò–º—è –≤–µ—Ç–∫–∏: $proposed_branch"

  read -p "–°–æ–∑–¥–∞—Ç—å –∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É –≤–µ—Ç–∫—É? (Y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    git_branch_create "$proposed_branch"
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–µ—Ç–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    # git_push origin "$proposed_branch"
    echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É: $proposed_branch"
  else
    echo "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –†–∞–±–æ—Ç–∞ –≤ –≤–µ—Ç–∫–∞—Ö 'main' –∏–ª–∏ 'master' –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1 # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
  fi
}
```

### ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ Git

```
‚úì GIT SETUP CHECKPOINT
- –†–∞–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥ —á–∏—Å—Ç? [–î–ê/–ù–ï–¢/–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï]
- –†–∞–±–æ—Ç–∞ –≤–µ–¥–µ—Ç—Å—è –≤ feature-–≤–µ—Ç–∫–µ (–Ω–µ –≤ main/master)? [–î–ê/–ù–ï–¢]
- –ù–æ–≤–∞—è –≤–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ (–µ—Å–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å)? [–î–ê/–ù–ï–¢/–ù/–ü]

‚Üí –ï—Å–ª–∏ –≤—Å–µ –î–ê: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
‚Üí –ï—Å–ª–∏ –ù–ï–¢: –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.
```
